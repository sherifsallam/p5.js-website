Skip-To-Content: تخطى الى المحتوى
Language-Settings: اعدادات اللغة
Sidebar-Title: تصفح الموقع
Home: الصفحة الرئيسية
Editor: محرر
Download: تحميل
Donate: تبرع
Start: البدء
Reference: مرجع
Libraries: مكتبات
Learn: تعلم
Teach: درس
Examples: أمثلة
Books: كتب
Community: مجتمع
Contribute: تساهم
Forum: المنتدى
Showcase: عرض
footerxh1: الاعتمادات
footer1: 'يتولى p5.js حاليًا قيادة '
footer2: ' و '
footer3: ' وتم إنشاؤه بواسطة '
footer4: '. تم تطوير p5.js بواسطة مجتمع من المتعاونين ، بدعم من '
footer5: ' و '
footer6: '. الهوية والتصميم الجرافيكي '
footer7: '. '
footer8: 'معلومات'
footer9: '.'
tagline1: Processing fun times JavaScript quirkiness
tagline2: Processing simplicity times JavaScript flexibility
tagline3: Processing intuition times JavaScript power
tagline4: Processing creativity times JavaScript dynamism
tagline5: Processing community times JavaScript community
tagline6: the power of Processing times the reach of JavaScript
tagline7: The p5.js community stands in solidarity with Black Lives Matter.
home:
  start-creating: p5 ابدأ في الإنشاء باستخدام محرر 
  p1xh1: مرحبا!
  p1x1: >-
    p5.js هي مكتبة JavaScript للترميز الإبداعي ، مع التركيز على إنشاء ملفات
     الترميز يمكن الوصول إليه وشامل للفنانين والمصممين والمعلمين ،
     مبتدئين وأي شخص آخر! p5.js مجاني ومفتوح المصدر لأننا نؤمن به
     يجب أن تكون البرامج وأدوات تعلمها في متناول الجميع.
  p1x2: >-
    باستخدام استعارة الرسم التخطيطي ، يحتوي p5.js على مجموعة كاملة من الرسم
     وظائف. ومع ذلك ، فأنت لست مقيدًا بلوحة الرسم الخاصة بك. تستطيع
     فكر في صفحة المتصفح بأكملها على أنها رسم تخطيطي ، بما في ذلك كائنات HTML5 لـ
     النص والإدخال والفيديو وكاميرا الويب والصوت.
  p2xh2: مجتمع
  p2x1: >-
    نحن مجتمع ومتضامن مع الناس من كل جنس
     الهوية والتعبير والتوجه الجنسي والعرق والعرق واللغة ،
     النوع العصبي ، الحجم ، الإعاقة ، الطبقة ، الدين ، الثقافة ، الثقافة الفرعية ،
     الرأي السياسي والعمر ومستوى المهارة والمهنة والخلفية. نحن
     تقر بأنه ليس لدى الجميع الوقت أو الوسائل المالية أو القدرة على ذلك
     نشارك بنشاط ، لكننا ندرك ونشجع مشاركة الجميع
     أنواع. نحن نسهل ونعزز الوصول والتمكين. نحن جميعا متعلمون.
  p2x2: 'p5.js هو تفسير لـ '
  p2x3: ' لشبكة الإنترنت اليوم. نعقد الأحداث ونعمل بدعم من '
  p2x4: .
  p2x5: 'تعلم المزيد عن  '
  p2x6: مجتمعنا
  p2x7: .
  p3xh2: البدء
  p3xp1: 'قم بعمل رسمك الأول في ملف  '
  p3xp2: '. تعرف على المزيد حول الرسم باستخدام p5.js على ملف '
  p3xp3: صفحة البدء
  p3xp4: ' وكل ما يمكنك القيام به في '
  p3xp5: المرجعي
  p3xp6: .
  p4xh2: شارك
  p4xp1: 'هناك طرق عديدة للمساهمة في p5.js:'
  p4xp2: خيارات المشاركة
  p4xp3: شارك شيئًا قمت به!
  p4xp4: قم بتدريس ورشة عمل أو فصل دراسي.
  p4xp5: نظم لقاء.
  p4xp6: المساهمة في قاعدة البيانات.
  sketch_credits: اعتمادات الرسم
  sketch_info: Hunminjeongeum2020 انشأ من قبل Seonghyeon Kim
copyright:
  copyright-title: معلومات حقوق التأليف والنشر
  copyright1: 'مكتبة p5.js هي برمجيات حرة ؛ يمكنك إعادة توزيعه و / أو تعديله
     بموجب شروط '
  copyright2: ' كما نشرته مؤسسة البرمجيات الحرة ، الإصدار 2.1.'
  copyright3: 'مرجع اللغة تحت  '
  copyright4: ' الترخيص الذي يجعل من الممكن إعادة استخدام هذا المحتوى لأغراض غير تجارية إذا تم تسجيله.'
get started:
  get-started-title: ابدء
  get-started1: >-
    ترشدك هذه الصفحة خلال إعداد مشروع p5.js وعمل أول رسم تخطيطي لك.
  get-started2: 'أسهل طريقة للبدء هي استخدام '
  get-started3: محرر p5.js
  get-started4: ', يمكنك فتح محرر الويب ويمكنك التمرير لأسفل إلى '
  get-started5: رسمك الأول
  get-started6: >-
    . إذا كنت ترغب في العمل على إصدار سطح المكتب من p5.js يمكنك التمرير لأسفل إلى
  get-started7: تعليمات التنزيل
  get-started-button: 'ينسخ'
  settingUp-title: إعداد p5.js باستخدام محرر على جهاز الكمبيوتر الخاص بك
  download-title: تنزيل نسخة من مكتبة p5.js
  hosted-title: استخدام نسخة مستضافة من مكتبة p5.js
  download1: 'أسهل طريقة للبدء هي استخدام المثال الفارغ الذي يأتي مع '
  download2: p5.js كاملة
  download3: ' تحميل.'
  download8: 'بعد التنزيل ، تحتاج إلى إعداد خادم محلي. انظر التعليمات '
  download9: هنا
  download10: '. قم بتشغيل الخادم المحلي الخاص بك داخل المجلد الذي تم تنزيله وعلى المستعرض الخاص بك ، انتقل إلى '
  download11: 'http://localhost:{your-port-num}/empty-example'
  download4: >-
    إذا بحثت في index.html ، فستلاحظ أنه يرتبط بالملف p5.js. إذا
     ترغب في استخدام الإصدار المصغر (مضغوط لصفحة أسرع
     تحميل) ، قم بتغيير الرابط إلى p5.min.js.
  download5: >-
    بدلاً من ذلك ، يمكنك الارتباط بملف p5.js مستضاف عبر الإنترنت. جميع إصدارات
     يتم تخزين p5.js في CDN (شبكة توصيل المحتوى). يمكنك أن تجد التاريخ
     من هذه الإصدارات في
  download6: '. في هذه الحالة يمكنك تغيير الرابط إلى:'
  download7: 'قد يبدو نموذج صفحة HTML بالشكل التالي:'
  environment-title: بيئة
  environment1: 'ستحتاج إلى محرر نصوص لتشغيل p5.js على جهاز الكمبيوتر الخاص بك. يمكنك استخدام ال '
  environmentlink: 'http://en.wikipedia.org/wiki/Source_code_editor'
  environment2: ' محرر الكود '
  environment3: 'من اختيارك. تعليمات الإعداد مع '
  environment4: ' المدرجة أدناه ، وتشمل خيارات المحرر الجيدة الأخرى '
  environment5: ' و '
  environment6: >-
    إذا كنت من مستخدمي قارئ الشاشة ولا تستخدم محرر الويب p5 ، فيمكنك ذلك
     تريد استخدامها
  environment7: ' أو '
  environment8: >-
    افتح Sublime. اذهب إلى قائمة ملف واختر فتح ... واختر المجلد
     التي توجد بها ملفات html و js. على الشريط الجانبي الأيسر ، يجب عليك ذلك
     ابحث عن اسم المجلد في الأعلى ، مع قائمة بالملفات الموجودة في ملف
     المجلد أدناه مباشرة.
  environment9: >-
    انقر فوق ملف sketch.js الخاص بك وسيتم فتحه على اليمين حيث يمكنك ذلك
     تحريره.
  environment10: تم فتح كود بادئ التشغيل p5 في محرر سامي.
  environment11: >-
   افتح ملف index.html في متصفحك بالنقر المزدوج عليه في ملف
     مدير الملفات أو اكتب:
  environment12: 'file:///the/file/path/to/your/html'
  environment14: ' (or '
  environment15: 'http://localhost:{your-port-num}/empty-example'
  environment16: ' إذا كنت تستخدم خادمًا محليًا)'
  environment13: ' في شريط العنوان لعرض الرسم التخطيطي الخاص بك.'
  your-first-sketch-title: رسمك الأول
  your-first-sketch-intro1: 'في ال '
  your-first-sketch-intro2: 'https://editor.p5js.org/'
  your-first-sketch-intro3: محرر الويب p5.js
  your-first-sketch-intro4: ' يجب أن تجد الكود التالي:'
  your-first-sketch1: 'بعد، بعدما '
  your-first-sketch2: ' قم بتضمين هذا السطر من التعليمات البرمجية: '
  your-first-sketch3: 'الآن يجب أن يكون الرمز الخاص بك كما يلي: '
  your-first-sketch4: >-
    يرسم الخط الذي أضفته للتو شكلًا بيضاويًا ، مع مركزه بمقدار 50 بكسل
     من اليسار و 50 بكسل لأسفل من الأعلى ، بعرض وارتفاع 80
     بكسل.
  your-first-sketch5: في المحرر ، اضغط على "تشغيل" لعرض الكود الخاص بك أثناء العمل!
  your-first-sketch6: >-
    إذا كنت تستخدم قارئ شاشة ، فيجب عليك تشغيل المخرجات التي يمكن الوصول إليها في
     محرر p5 عبر الإنترنت ، يجب إضافة إمكانية الوصول خارج المحرر
     مكتبة في html الخاص بك. لتعلم المزيد visit&#32;
  your-first-sketch7: 'باستخدام p5 مع برنامج تعليمي لقارئ الشاشة'
  your-first-sketch8: >-
    إذا قمت بكتابة كل شيء بشكل صحيح ، فسيظهر هذا على الشاشة
     نافذة او شباك:
  your-first-sketch9: قماش به دائرة عرض وارتفاع 50 في الموضع 80 x و 80 y
  your-first-sketch10: >-
    إذا لم يظهر أي شيء ، فقد يواجه المحرر مشكلة في فهم ما
     كنت قد كتبته. إذا حدث هذا ، فتأكد من نسخ رمز المثال
     بالضبط: يجب أن تكون الأرقام داخل أقواس وأن تحتوي على فاصلات
     بين كل منهما ، يجب أن ينتهي السطر بفاصلة منقوطة ، ويجب أن ينتهي الخط الناقص
     لتهجئتها بشكل صحيح.
  your-first-sketch11: >-
    من أصعب الأمور عند البدء في البرمجة
     أنه يجب أن تكون دقيقًا جدًا بشأن بناء الجملة. المتصفح ليس دائمًا
     ذكي بما يكفي لمعرفة ما تقصده ، ويمكن أن يثير قلقك بشأن
     وضع علامات الترقيم. سوف تعتاد عليها بقليل من الممارسة. في
     أسفل يسار المحرر ستجد قسم وحدة التحكم. هنا لك
     يمكن العثور على رسائل من المحرر مع تفاصيل حول أي أخطاء فيه
     لقاءات.
  your-first-sketch12: >-
   بعد ذلك ، سننتقل إلى رسم أكثر إثارة قليلاً. تعديل
     المثال الأخير لتجربة هذا:
  your-first-sketch13: >-
    يقوم هذا البرنامج بإنشاء لوحة قماشية بعرض 400 بكسل وارتفاع 400 بكسل ،
     ثم يبدأ في رسم دوائر بيضاء في موضع الماوس. عندما
     عند الضغط على زر الفأرة ، يتغير لون الدائرة إلى اللون الأسود. قم بتشغيل الكود ،
     حرك الماوس وانقر لتجربة ذلك.
  your-first-sketch14: قماش به دوائر متعددة مرسومة عليه تتبع مسار الماوس
  first-sketch-heading1: مقتطف رمز مع القطع الناقص
  first-sketch-heading2: ملاحظة لمستخدمي قارئ الشاشة
  first-sketch-heading3: مقتطف رمز مع التفاعل
  what-next-title: ماذا بعد؟
  learn1: 'تفحص ال '
  learn2: صفحة التعلم
  learn3: ' و '
  learn4: صفحة الأمثلة
  learn5: ' للمزيد من.'
  learn6: 'راقب '
  learn7: The Coding Train
  learn8: ' و '
  learn9: Kadenze
  learn10: ' دروس الفيديو.'
  reference1: 'اعرض ملف '
  reference2: ' المرجعي'
  reference3: ' للحصول على الوثائق الكاملة.'
  learn11: 'إذا كنت ترغب في استخدام p5 مع قارئ الشاشة ، فراجع ملف '
  learn12: p5 مع برنامج تعليمي لقارئ الشاشة
  processing-transition1: 'إذا كنت قد استخدمت المعالجة في الماضي ، فاقرأ '
  processing-transition2: 'https://github.com/processing/p5.js/wiki/Processing-transition'
  processing-transition3: Processing transition tutorial
  processing-transition4: ' لمعرفة كيفية التحويل من المعالجة إلى p5.js ، والاختلافات الرئيسية بينهما.'
  book1: >-
    تم اقتباس أجزاء من هذا البرنامج التعليمي من كتاب "الشروع في العمل"
     p5.js ، بقلم لورين مكارثي ، وكيسي رياس ، وبن فراي ، أورايلي / ميك 2015.
     حقوق النشر © 2015. جميع الحقوق محفوظة. آخر تعديل في p5.js 2019
     مؤتمر المساهمين.
download:
  Download: تحميل
  download-intro: >-
    أهلا وسهلا! بينما تحتوي هذه الصفحة بعنوان "تنزيل" في الواقع على مجموعة من الارتباطات إما لتنزيل المكتبة أو البدء في العمل معها عبر الإنترنت. لقد حاولنا ترتيب الأشياء لتعكس ما قد يريده المبتدئ أولاً ، إلى الموارد التي قد يبحث عنها المبرمجون الأكثر خبرة.
  editor-title: محرر
  p5.js-editor: p5.js محرر
  p5.js-editor-intro: >-
    يقوم هذا الرابط بإعادة توجيهك إلى محرر p5.js عبر الإنترنت حتى تتمكن من البدء في استخدام p5.js على الفور.
  editor-includes: 'ابدأ الترميز باستخدام محرر p5.js ، لا يلزم الإعداد!'
  complete-library-title: مكتبة كاملة
  complete-library-intro1: >-
    هذا تنزيل يحتوي على ملف مكتبة p5.js والملحق p5.sound ومثال لمشروع. لا يحتوي على محرر. قم بزيارة
  complete-library-intro2: ابدأ
  complete-library-intro3: ' لمعرفة كيفية إعداد مشروع p5.js.'
  p5.js-complete: p5.js كاملة
  includes-1: 'يشمل:'
  includes-2: 'p5.js و p5.sound.js ومثال على المشروع'
  includes-3: 'إصدار '
  single-files-title: ملفات مفردة
  single-files-intro: >-
    هذه تنزيلات أو روابط لملف مكتبة p5.js. لم يتم تضمين محتويات إضافية.
  single-file: 'ملف واحد: '
  p5.js-uncompressed: نسخة كاملة غير مضغوطة
  compressed: نسخة مضغوطة
  link: 'ربط: '
  statically-hosted-file: ملف مستضاف بشكل ثابت
  etc-title: Github موارد
  older-releases: الإصدارات السابقة (الإصدارات القديمة وسجل التغيير)
  github-repository: مستودع الكود (GitHub)
  report-bugs: 'الإبلاغ عن المشكلات والأخطاء والأخطاء'
  supported-browsers: 'المتصفحات المدعومة '
  support-title: دعم p5.js!
  support-options: خيارات الدعم
  support-1:
    'نحن نحتاج مساعدتك! p5.js هو برنامج مجاني مفتوح المصدر. نريد أن نجعل مجتمعنا مفتوحًا وشاملًا قدر الإمكان. يمكنك دعم هذا العمل من خلال التبرع إلى '
  support-2: >-
    , المنظمة التي تدعم p5.js.
    يدعم تبرعك تطوير البرامج لـ p5.js ، والموارد التعليمية مثل أمثلة التعليمات البرمجية والبرامج التعليمية ،
  support-3: الزمالات
  support-4: ', و '
  support-5: الفعاليات المجتمعية.
  support-17: >-
    p5.js Contributors Conference at CMU STUDIO for Creative Inquiry in
    Pittsburgh (Image credit: Taeyoon Choi)
  support-18: >-
    Processing Fellow Saskia Freeke is organizing Code Liberation x Processing
    workshops in London (Image credit: Code Liberation Foundation)
  support-19: >-
    Learning to Teach, Teaching to Learn conference with SFPC (Image credit:
    Kira Simon-Kennedy)
  support-20: >-
    Processing Foundation Fellow Cassie Tarakajian's workshop at Code Art Miami
    (Image credit: Christian Arévalo Photography)
  support-21: >-
    Taeyoon Choi and ASL interpretor at Signing Coders p5.js workshop (Image
    credit: Taeyoon Choi)
  support-22: 'Google Summer of Code kickoff (Image credit: Taeyoon Choi)'
  support-23: >-
    Processing Foundation Fellow Cassie Tarakajian's workshop at Code Art Miami
    (Image credit: Christian Arévalo Photography)
  support-24: >-
    Luisa Pereira and Yeseul Song helping facilitate a sign language based p5.js
    workshop led by Taeyoon Choi (Image credit: Taeyoon Choi)
  support-25: >-
    p5.js Contributors Conference at CMU STUDIO for Creative Inquiry in
    Pittsburgh (Image credit: Taeyoon Choi)
  support-26: >-
    Processing Fellow Digital Citizens Lab hosts a panel on STEM teaching at the
    International Center of Photography (Image credit: International Center of
    Photography)
  support-27: >-
    Participants at p5.js workshop in Santiago, Chile, led by Aarón
    Montoya-Moraga (Image credit: Aarón Montoya-Moraga.)
  support-28: >-
    Claire Kearney-Volpe helping facilitate a sign language based p5.js workshop
    led by Taeyoon Choi (Image credit: Taeyoon Choi)
  support-29: >-
    Processing Foundation Fellow DIY Girls run a creative coding program in Los
    Angeles (Image credit: DIY Girls)
  support-30: Processing Fellow Digital Citizens Lab
  support-31: Bicoastal p5.js meetup at UCLA DMA and NYU ITP
  support-32: The Processing Foundation
  support-33: ' تأسست في عام 2012 بعد أكثر من عقد من العمل مع برنامج المعالجة الأصلي. تتمثل مهمة المؤسسة في تعزيز محو الأمية البرمجية في الفنون المرئية ، ومحو الأمية المرئية في المجالات ذات الصلة بالتكنولوجيا - وجعل هذه المجالات في متناول المجتمعات المتنوعة. هدفنا هو تمكين الأشخاص من جميع الاهتمامات والخلفيات لتعلم كيفية البرمجة والقيام بعمل إبداعي باستخدام الكود ، وخاصة أولئك الذين قد لا يكون لديهم إمكانية الوصول إلى هذه الأدوات والموارد.'
  support-17-alt: ''
  support-18-alt: ''
  support-19-alt: ''
  support-20-alt: ''
  support-21-alt: ''
  support-22-alt: ''
  support-23-alt: ''
  support-24-alt: ''
  support-25-alt: ''
  support-26-alt: ''
  support-27-alt: ''
  support-28-alt: ''
  support-29-alt: ''
  support-30-alt: ''
  support-31-alt: ''
learn:
  learn-title: Learn
  teach-title2: Teach
  learn1: >-
    These tutorials provide more in-depth or step-by-step overviews of
    particular topics. Check out the
  learn2: examples page
  learn3: to explore short demonstrations of various p5.js topics.
  introduction-to-p5js-title: Introduction to p5.js
  hello-p5js-title: Hello p5.js
  hello-p5js: >-
    This short video will introduce you to the library and what you can do with
    it.
  getting-started-title: ابدء
  getting-started: >-
    Welcome to p5.js! <br> This introduction covers the basics of setting up a
    p5.js project.
  p5js-overview-title: p5.js overview
  p5js-overview: An overview of the main features of p5.js.
  p5js-processing-title: p5.js and Processing
  p5js-processing: >-
    The main differences between the two, and how to convert from one to the
    other.
  p5-screen-reader-title: p5 with a screen reader
  p5-screen-reader: Setting up p5 so that it can be used easily with a screen reader.
  using-local-server-title: Using a local server
  using-local-server: 'How to set up a local server on Mac OSX, Windows, or Linux.'
  p5js-wiki-title: p5.js wiki
  p5js-wiki: Additonal documentation and tutorials contributed by the community
  connecting-p5js-title: Connecting p5.js
  creating-libraries-title: Creating libraries
  creating-libraries: Creating p5.js addon libraries.
  nodejs-and-socketio-title: node.js and socket.io
  nodejs-and-socketio: 'Using a node.js server with p5.js, communication via socket.io.'
  programming-topics-title: Programming topics
  beyond-the-canvas-title: Beyond the canvas
  beyond-the-canvas: Creating and manipulating elements on the page beyond the canvas.
  3d-webgl-title: 3D/WebGL
  3d-webgl: Developing advanced graphics applications in p5.js using WEBGL mode.
  color-title: Color
  color: An introduction to digital color.
  coordinate-system-and-shapes-title: Coordinate System and Shapes
  coordinate-system-and-shapes: Drawing simple shapes and using the coordinate system.
  interactivity-title: Interactivity
  interactivity: Introduction to interactivity with the mouse and keyboard.
  program-flow-title: Program Flow
  program-flow: Introduction to controlling program flow in p5.js.
  curves-title: Curves
  curves: >-
    An introduction to the three types of curves in p5.js: arcs, spline curves,
    and Bézier curves.
  becoming-a-better-programmer-title: Becoming a better programmer
  debugging-title: Debugging
  debugging: Field guide to debugging for everyone.
  optimizing-title: Optimizing p5.js code for performance
  optimizing: >-
    A tutorial of tips and tricks for optimizing your code to make it run faster
    and smoother.
  test-driven-development-title: Unit testing and test driven development
  test-driven-development: >-
    Save yourself from agony on install day. What is unit testing and how to use
    it? By Andy Timmons.
  contributing-to-the-community-title: Contributing to the community
  development-title: Development
  development: Getting started and overview for contributing to development.
  looking-inside-title: Looking inside p5
  looking-inside: >-
    A friendly intro to the file structure and tools for p5.js development, by
    Luisa Pereira.
  writing-tutorial-title: Writing a tutorial
  writing-tutorial: A guide to writing a p5.js programming tutorial.
  writing-a-tutorial-title: Guide to contributing p5.js tutorials
  writing-a-tutorial-author: This tutorial was written by Tega Brain.
  writing-a-tutorial-1: >-
    We invite educators, contributors and general enthusiasts to contribute p5js
    tutorials. The p5js project makes creative coding and open source
    development more accessible to a diverse community and we are excited to
    publish tutorials on all aspects of the development process. Our learning
    materials so far include guides on learning p5, programming technique and
    how to contribute to an open source project.
  writing-a-tutorial-2: >-
    We welcome new written tutorial contributions and this guide outlines the
    steps of how to propose, prepare and contribute.
  writing-a-tutorial-how-start-title: 'How to get started:'
  writing-a-tutorial-how-start-1: 'Check that your proposed topic has not already been covered. There is '
  writing-a-tutorial-how-start-2: a working spreadsheet here
  writing-a-tutorial-how-start-3: >-
    that outlines in progress tutorials. If your topic is listed as in progress,
    perhaps you can add to work being done and contribute to preparing existing
    work for publication so please reach out to us.
  writing-a-tutorial-how-start-4: >-
    If your topic is not already covered and is not listed as in progress,
    please write a few sentences on what you propose to cover and email us this
    description at education@p5js.org.
  writing-a-tutorial-how-prepare-title: 'How to prepare a p5js tutorial for publication online:'
  writing-a-tutorial-how-prepare-1: >-
    When your tutorial is ready for publication, please follow these steps to
    prepare your content for the p5js website.
  writing-a-tutorial-how-prepare-2: 'Prepare the content of your tutorial as a tutorial-name.hbs file with '
  writing-a-tutorial-how-prepare-3: this basic structure
  writing-a-tutorial-how-prepare-4: '. As is shown in this file, it must contain a header as shown below:'
  writing-a-tutorial-how-prepare-5: >-
    The folder containing your tutorial will be placed in the 'tutorials' folder
    of the p5js site. The file called index.hbs is the
  writing-a-tutorial-how-prepare-6: 'p5.js tutorials landing page,'
  writing-a-tutorial-how-prepare-7: ' and the test-tutorial.hbs file is the test tutorial.'
  writing-a-tutorial-how-prepare-8: 'All content should go in the:'
  writing-a-tutorial-how-prepare-9: >-
    tags on the page, with formatting defined by the &lt;h1&gt; and &lt;h2&gt;
    tags, the &lt;p&gt; paragraph tags as is done shown on the
  writing-a-tutorial-how-prepare-10: test tutorial page.
  writing-a-tutorial-how-prepare-11: >-
    If your tutorial contains images, they are to be placed in the assets folder
    of the p5 site, in the location src/assets/learn/test-tutorial/images as
    shown below.
  writing-a-tutorial-how-prepare-12: 'To correctly format code in the html of the page use the tag:'
  writing-a-tutorial-embedding-title: Embedding p5.js sketches
  writing-a-tutorial-embedding-1: >-
    Using p5js means you can illustrate your tutorial with animated, interactive
    or editable code examples to demonstrate programming concepts. Your examples
    should be prepared as p5.js sketches and can be embedded into the tutorial
    in two ways.
  writing-a-tutorial-embedding-2: 'If the example is to be editable like in '
  writing-a-tutorial-embedding-3: the reference pages
  writing-a-tutorial-embedding-4: ' of the p5js site, the p5 sketch should be embedded into the html page using the p5js widget. Follow '
  writing-a-tutorial-embedding-5: 'this guide '
  writing-a-tutorial-embedding-6: 'on how to embed p5js sketches using the widget written by '
  writing-a-tutorial-embedding-7: . You can also explore this in action on the
  writing-a-tutorial-embedding-8: ' test tutorial page'
  writing-a-tutorial-embedding-9: .
  writing-a-tutorial-embedding-10: >-
    If the example is to be animated and/or interactive but not editable. The
    p5.js sketch should be embedded into the page as an iframe as described
    below.
  writing-a-tutorial-iframe-title: Embed a p5 sketch using an iframe
  writing-a-tutorial-iframe-1: >-
    An iframe is like creating a window through which you can explore another
    page, sandboxed from the rest of your page. In this case it will be a window
    to the index.html containing your p5.js sketch.
  writing-a-tutorial-iframe-2: >-
    Put your p5 sketches in the /src/assets/learn folder of the site, in a
    folder labelled with the name of your sketch as shown in the screenshot.
    This is where all the images and p5 sketches linked by iframe should be
    stored.
  writing-a-tutorial-iframe-3: >-
    In the subfolders containing your p5 examples there should be a sketch.js
    file and the embed.html file for the sketch.
  writing-a-tutorial-iframe-4: >-
    Make sure your embed.html file has the correct paths to the p5 libraries of
    the site. If your file structure is the same as above, the path to the p5.js
    library should be "../../../js/p5.min.js".
  writing-a-tutorial-iframe-5: >-
    You can then embed the p5js index files as iframes in the .hbs file that
    contains your tutorial content. The embed code for the iframe would then
    be:
  writing-a-tutorial-iframe-6: >-
    Styling for the iframe (this could directly into the post or in a
    stylesheet):
  writing-a-tutorial-iframe-7: 'Here you can find the naked sketch running: '
  writing-a-tutorial-iframe-8: 'And here it is embedded in the p5 site using the code below:  '
  writing-a-tutorial-iframe-9: >-
    One thing to note is that you need to manually set the size of the iframe,
    so it works best if things are a standard size.
  writing-a-tutorial-iframe-10: >-
    Also note that the links to the p5.js library files do not happen from the
    .eps page with all the tutorial content. Instead they will be located in the
    html page that is rendering your sketch (in this case, called embed.html).
  writing-a-tutorial-iframe-11: 'More information on embedding p5.js sketches can be found '
  writing-a-tutorial-embed-iframe-12: here.
  writing-a-tutorial-finishing-title: Finishing up
  writing-a-tutorial-finishing-1: >-
    Once your have finished writing your tutorial and your content has been
    given the thumbs up. Fork the p5.js website repository, prepare your content
    as described above and then issue a pull request to the p5.js website
    repository so we can publish your contribution!
  writing-a-tutorial-finishing-2: Thank you!
  color-description1: >-
    This tutorial is from the book Learning Processing by Daniel Shiffman,
    published by Morgan Kaufmann, © 2008 Elsevier Inc. All rights reserved. It
    was ported to P5 by Kelly Chang. If you find any errors or have comments,
  color-description2: ' please let us know.'
  color-p1x1: >-
    In the digital world, when we want to talk about a color, precision is
    required. Saying "Hey, can you make that circle bluish-green?" will not do.
    Color, rather, is defined as a range of numbers. Let's start with the
    simplest case: black & white or grayscale. 0 means black, 255 means white.
    In between, every other number—50, 87, 162, 209, and so on—is a shade of
    gray ranging from black to white.
  color-p2x1: 'By adding the '
  color-p2x2: ' and '
  color-p2x3: ' functions before something is drawn, we can set the color of any given shape. There is also the function '
  color-p2x4: ', which sets a background color for the window. Here''s an example.'
  color-code1: |-
    background(255);    // Setting the background to white
     stroke(0);          // Setting the outline (stroke) to black
     fill(150);          // Setting the interior of a shape (fill) to grey
     rect(50,50,75,100); // Drawing the rectangle
  color-p3x1: 'Stroke or fill can be eliminated with the functions: '
  color-p3x2: ' and '
  color-p3x3: >-
    . Our instinct might be to say "stroke(0)" for no outline, however, it is
    important to remember that 0 is not "nothing", but rather denotes the color
    black. Also, remember not to eliminate both—with
  color-p3x4: ' and '
  color-p3x5: ', nothing will appear!'
  color-p4x1: >-
    In addition, if we draw two shapes, p5.js will always use the most recently
    specified stroke and fill, reading the code from top to bottom.
  color-rgb-title: RGB Color
  color-rgb-p1x1: >-
    Remember finger painting? By mixing three "primary" colors, any color could
    be generated. Swirling all colors together resulted in a muddy brown. The
    more paint you added, the darker it got. Digital colors are also constructed
    by mixing three primary colors, but it works differently from paint. First,
    the primaries are different: red, green, and blue (i.e., "RGB" color). And
    with color on the screen, you are mixing light, not paint, so the mixing
    rules are different as well.
  color-rgb-li1: Red + Green = Yellow
  color-rgb-li2: Red + Blue = Purple
  color-rgb-li3: Green + Blue = Cyan (blue-green)
  color-rgb-li4: Red + Green + Blue = White
  color-rgb-li5: No colors = Black
  color-rgb-p2x1: >-
    This assumes that the colors are all as bright as possible, but of course,
    you have a range of color available, so some red plus some green plus some
    blue equals gray, and a bit of red plus a bit of blue equals dark purple.
    While this may take some getting used to, the more you program and
    experiment with RGB color, the more it will become instinctive, much like
    swirling colors with your fingers. And of course you can't say "Mix some red
    with a bit of blue," you have to provide an exact amount. As with grayscale,
    the individual color elements are expressed as ranges from 0 (none of that
    color) to 255 (as much as possible), and they are listed in the order R, G,
    and B. You will get the hang of RGB color mixing through experimentation,
    but next we will cover some code using some common colors.
  color-transparency-title: Color Transparency
  color-transparency-p1x1: >-
    In addition to the red, green, and blue components of each color, there is
    an additional optional fourth component, referred to as the color's "alpha".
    Alpha means transparency and is particularly useful when you want to draw
    elements that appear partially see-through on top of one another. The alpha
    values for an image are sometimes referred to collectively as the "alpha
    channel" of an image.
  color-transparency-p2x1: >-
    It is important to realize that pixels are not literally transparent, this
    is simply a convenient illusion that is accomplished by blending colors.
    Behind the scenes, p5.js takes the color numbers and adds a percentage of
    one to a percentage of another, creating the optical perception of blending.
    (If you are interested in programming "rose-colored" glasses, this is where
    you would begin.)
  color-transparency-p3x1: >-
    Alpha values also range from 0 to 255, with 0 being completely transparent
    (i.e., 0% opaque) and 255 completely opaque (i.e., 100% opaque).
  color-custom-ranges-title: Custom Color Ranges
  color-custom-ranges-p1x1: >-
    RGB color with ranges of 0 to 255 is not the only way you can handle color
    in p5.js, in fact, it allows us to think about color any way we like. For
    example, you might prefer to think of color as ranging from 0 to 100 (like a
    percentage). You can do this by specifying a custom
  color-custom-ranges-p2x1: >-
    The above function says: "OK, we want to think about color in terms of red,
    green, and blue. The range of RGB values will be from 0 to 100."
  color-custom-ranges-p3x1: >-
    Although it is rarely convenient to do so, you can also have different
    ranges for each color component:
  color-custom-ranges-p4x1: >-
    Now we are saying "Red values go from 0 to 100, green from 0 to 500, blue
    from 0 to 10, and alpha from 0 to 255."
  color-custom-ranges-p5x1: >-
    Finally, while you will likely only need RGB color for all of your
    programming needs, you can also specify colors in the HSB (hue, saturation,
    and brightness) mode. Without getting into too much detail, HSB color works
    as follows:
  color-custom-ranges-li1x1: Hue
  color-custom-ranges-li1x2: '—The color type, ranges from 0 to 360 by default.'
  color-custom-ranges-li2x1: Saturation
  color-custom-ranges-li2x2: '—The vibrancy of the color, 0 to 100 by default.'
  color-custom-ranges-li3x1: Brightness
  color-custom-ranges-li3x2: '—The, well, brightness of the color, 0 to 100 by default.'
  color-custom-ranges-p6x1: 'With '
  color-custom-ranges-p6x2: ' you can set your own ranges for these values. Some prefer a range of 0-360 for hue (think of 360 degrees on a color wheel) and 0-100 for saturation and brightness (think of 0-100%).'
  coordinate-system-description1: 'This tutorial is from the book '
  coordinate-system-description2: Learning Processing
  coordinate-system-description3: ' by Daniel Shiffman, published by Morgan Kaufmann, © 2008 Elsevier Inc. All rights reserved. It was ported to p5.js by Alex Yixuan Xu. If you find any errors or have comments, please '
  coordinate-system-description4: let us know
  coordinate-system-description5: .
  coordinate-system-description-title: Coordinate System and Shapes
  coordinate-system-description-p1x1: >-
    Before we begin programming with p5, we must first channel our eighth grade
    selves, pull out a piece of graph paper, and draw a line. The shortest
    distance between two points is a good old fashioned line, and this is where
    we begin, with two points on that graph paper.
  coordinate-system-description-p2x1: >-
    The above figure shows a line between point A (1,0) and point B (4,5). If
    you wanted to direct a friend of yours to draw that same line, you would
    give them a shout and say "draw a line from the point one-zero to the point
    four-five, please." Well, for the moment, imagine your friend was a computer
    and you wanted to instruct this digital pal to display that same line on its
    screen. The same command applies (only this time you can skip the
    pleasantries and you will be required to employ a precise formatting). Here,
    the instruction will look like this:
  coordinate-system-description-p3x1: >-
    Even without having studied the syntax of writing code, the above statement
    should make a fair amount of sense. We are providing a command (which we
    will refer to as a "function") for the machine to follow entitled "line." In
    addition, we are specifying some arguments for how that line should be
    drawn, from point A (1,0) to point B (4,5). If you think of that line of
    code as a sentence, the function is a verb and the arguments are the objects
    of the sentence. The code sentence also ends with a semicolon instead of a
    period.
  coordinate-system-description-p4x1: >-
    The key here is to realize that the computer screen is nothing more than a
    fancier piece of graph paper. Each pixel of the screen is a coordinate - two
    numbers, an "x" (horizontal) and a "y" (vertical) - that determines the
    location of a point in space. And it is our job to specify what shapes and
    colors should appear at these pixel coordinates.
  coordinate-system-description-p5x1: >-
    Nevertheless, there is a catch here. The graph paper from eighth grade
    ("Cartesian coordinate system") placed (0,0) in the center with the y-axis
    pointing up and the x-axis pointing to the right (in the positive direction,
    negative down and to the left). The coordinate system for pixels in a
    computer window, however, is reversed along the y-axis. (0,0) can be found
    at the top left with the positive direction to the right horizontally and
    down vertically.
  coordinate-system-simple-shapes-title: Simple Shapes
  coordinate-system-simple-shapes-p1x1: >-
    The vast majority of p5 programming examples are visual in nature. These
    examples, at their core, involve drawing shapes and setting pixels. Let's
    begin by looking at four primitive shapes.
  coordinate-system-simple-shapes-p2x1: >-
    For each shape, we will ask ourselves what information is required to
    specify the location and size (and later color) of that shape and learn how
    p5 expects to receive that information. In each of the diagrams below, we'll
    assume a window with a width of 100 pixels and height of 100 pixels.
  coordinate-system-simple-shapes-p3x1: 'A '
  coordinate-system-simple-shapes-p3x2: ' is the easiest of the shapes and a good place to start. To draw a point, we only need an x and y coordinate.'
  coordinate-system-simple-shapes-p4x1: 'A '
  coordinate-system-simple-shapes-p4x2: ' isn''t terribly difficult either and simply requires two points: (x1,y1) and (x2,y2):'
  coordinate-system-simple-shapes-p5x1: 'Once we arrive at drawing a '
  coordinate-system-simple-shapes-p5x2: >-
    , things become a bit more complicated. In p5, a rectangle is specified by
    the coordinate for the top left corner of the rectangle, as well as its
    width and height.
  coordinate-system-simple-shapes-p6x1: >-
    A second way to draw a rectangle involves specifying the centerpoint, along
    with width and height. If we prefer this method, we first indicate that we
    want to use the
  coordinate-system-simple-shapes-p6x2: ' mode before the instruction for the rectangle itself. Note that p5 is case-sensitive.'
  coordinate-system-simple-shapes-p7x1: >-
    Finally, we can also draw a rectangle with two points (the top left corner
    and the bottom right corner). The mode here is
  coordinate-system-simple-shapes-p7x2: . Note this example gives the same result on screen as the example above.
  coordinate-system-simple-shapes-p8x1: 'Once we have become comfortable with the concept of drawing a rectangle, an '
  coordinate-system-simple-shapes-p8x2: ' is a snap. In fact, it is identical to '
  coordinate-system-simple-shapes-p8x3: ' with the difference being that an ellipse is drawn where the bounding box of the rectangle would be. The default mode for '
  coordinate-system-simple-shapes-p8x4: ' is '
  coordinate-system-simple-shapes-p8x5: ', rather than '
  coordinate-system-simple-shapes-p8x6: .
  coordinate-system-simple-shapes-p9x1: >-
    Now let's look at what some code with shapes in more complete form, with
    canvas dimensions of 200 by 200. Note the use of the createCanvas() function
    to specify the width and height of the canvas.
  teach-desc: 'Teach a p5 workshop or class, or create teaching materials!'
libraries:
  Libraries: Libraries
  core-libraries: Core Libraries
  community-libraries: Community Libraries
  libraries-created-by: 'Created by:'
  p5.sound: >-
    p5.sound extends p5 with Web Audio functionality including audio input,
    playback, analysis and synthesis.
  p5.accessibility: >-
    p5.accessibility makes the p5 canvas more accessible to people who are blind
    and visually impaired.
  asciiart: >-
    p5.asciiart is a simple and easy to use image - to - ASCII art converter for
    p5js.
  p5.ble: >-
    A Javascript library that enables communication between BLE devices and p5
    sketches.
  p5.bots: >-
    With p5.bots you can interact with your Arduino (or other microprocessor)
    from within the browser. Use sensor data to drive a sketch; use a sketch to
    drive LEDs, motors, and more!
  p5.clickable: 'Event driven, easy-to-use button library for p5.js.'
  p5.cmyk.js: CMYK ColorSpace
  p5.collide2D: >-
    p5.collide2D provides tools for calculating collision detection for 2D
    geometry with p5.js.
  p5.createloop: Create animation loops with noise and GIF exports in one line of code.
  p5.dimensions: >-
    p5.dimensions extends p5.js' vector functions to work in any number of
    dimensions.
  p5.EasyCam: >-
    Simple 3D camera control with inertial pan, zoom, and rotate. Major
    contributions by Thomas Diewald.
  p5.experience: >-
    Extensive library for p5.js that adds additional event-listening
    functionality for creating canvas-based web applications.
  p5.func: >-
    p5.func is a p5 extension that provides new objects and utilities for
    function generation in the time, frequency, and spatial domains.
  p5.geolocation: >-
    p5.geolocation provides techniques for acquiring, watching, calculating, and
    geofencing user locations for p5.js.
  p5.gibber: p5.gibber provides rapid music sequencing and audio synthesis capabilities.
  grafica.js: >-
    grafica.js lets you add simple but highly configurable 2D plots to your
    p5.js sketches.
  p5.gui: p5.gui generates a graphical user interface for your p5.js sketches.
  p5.localmessage: >-
    p5.localmessage provides a simple interface to send messages locally from
    one sketch to another for easy multi-window sketching!
  marching: 'Raster to vector conversion, isosurfaces.'
  mappa: >-
    Mappa provides a set of tools for working with static maps, tile maps, and
    geo-data. Useful when building geolocation-based visual representations.
  ml5.js: >-
    ml5.js builds on Tensorflow.js and provides friendly access to machine
    learning algorithms and models in the browser.
  p5.play: >-
    p5.play provides sprites, animations, input and collision functions for
    games and gamelike applications.
  p5.particle: >-
    The Particle and Fountain objects can be used to create data-driven effects
    that are defined through user structures or JSON input and user-draw
    functions.
  p5.Riso: >-
    p5.Riso is a library for generating files suitable for Risograph printing.
    It helps turn your sketches into multi-color prints.
  rita.js: >-
    RiTa.js provides a set of natural language processing objects for generative
    literature.
  Rotating knobs: Make knobs you can rotate with custom graphics and return value ranges.
  p5.scenemanager: >-
    p5.SceneManager helps you create sketches with multiple states / scenes.
    Each scene is a like a sketch within the main sketch.
  p5.screenPosition: Adds the screenX and screenY functionality from Processing to P5js.
  p5.scribble: >-
    Draw 2D primitives in a sketchy look. Created by Janneck Wullschleger, based
    on a port of the original Processing library
  p5.serial: >-
    p5.serial enables serial communication between devices that support serial
    (RS-232) and p5 sketches running in the browser.
  Shape5: >-
    Shape5 is a 2D primative library for elementary students who are learning to
    code for the first time.
  p5.shape.js: A library built to add more simple shapes to the p5.js framework.
  p5.speech: >-
    p5.speech provides simple, clear access to the Web Speech and Speech
    Recognition APIs, allowing for the easy creation of sketches that can talk
    and listen.
  p5.start2d.js: 'p5 extension for 2D static art using px, mm, cm or inches'
  p5.tiledmap: >-
    p5.tiledmap provides drawing and helper functions to include maps in your
    sketches.
  p5.touchgui: A multi-touch and mouse GUI Library for p5.js.
  tramontana: >-
    Tramontana is a platform for easily use many devices (iOS, Android,
    tramontana Board, ...) to create interactive environments, interactive
    spaces or just prototype experiences at scale and in space.
  vida: >-
    Vida is a simple library that adds camera (or video) based motion detection
    and blob tracking functionality to p5js.
  p5.voronoi: >-
    p5.voronoi provides a set of tools to draw and utilize voronoi diagrams in
    your p5.js sketches.
  p5.xr: A library for creating VR and AR sketches with p5.
  p5.3D: 3D Text and Images in WebGL.
  using-a-library-title: Using a library
  using-a-library1: >-
    A p5.js library can be any JavaScript code that extends or adds to the p5.js
    core functionality. There are two categories of libraries. Core libraries (
  using-a-library3: >-
    ) are part of the p5.js distribution, while contributed libraries are
    developed, owned, and maintained by members of the p5.js community.
  using-a-library4: >-
    To include a library in your sketch, link it into your HTML file, after you
    have linked in p5.js. An example HTML file might look like this:
  create-your-own-title: Create Your Own
  create-your-own1: p5.js welcomes libraries contributed by others! Check out the
  create-your-own2: libraries tutorial
  create-your-own3: for more specifics about how to create one.
  create-your-own4: >-
    If you have created a library and would like to have it included on this
    page, submit this form!
community:
  community-title: Community
  community-statement-title: p5.js Community Statement
  community-statement1: >-
    p5.js is a community interested in exploring the creation of art and design
    with technology.
  community-statement2: >-
    We are a community of, and in solidarity with, people from every gender
    identity and expression, sexual orientation, race, ethnicity, language,
    neuro-type, size, ability, class, religion, culture, subculture, political
    opinion, age, skill level, occupation, and background. We acknowledge that
    not everyone has the time, financial means, or capacity to actively
    participate, but we recognize and encourage involvement of all kinds. We
    facilitate and foster access and empowerment. We are all learners.
  community-statement3: >-
    We like these hashtags: #noCodeSnobs (because we value community over
    efficiency), #newKidLove (because we all started somewhere), #unassumeCore
    (because we don't assume knowledge), and #BlackLivesMatter (because of
    course).
  in-practice-title: 'In practice:'
  in-practice1: ' We are not code snobs. We do not assume knowledge or imply there are things that somebody should know. '
  in-practice2: >-
    We insist on actively engaging with requests for feedback regardless of
    their complexity.
  in-practice3: >-
    We welcome newcomers and prioritize the education of others. We strive to
    approach all tasks with the enthusiasm of a newcomer. Because we believe
    that newcomers are just as valuable in this effort as experts.
  in-practice4: >-
    We consistently make the effort to actively recognize and validate multiple
    types of contributions.
  in-practice5: We are always willing to offer help or guidance.
  in-times-conflict-title: 'In times of conflict:'
  in-times-conflict1: We listen.
  in-times-conflict2: We clearly communicate while acknowledging other's feelings.
  in-times-conflict3: >-
    We admit when we're wrong, apologize, and accept responsibility for our
    actions.
  in-times-conflict4: We are continuously seeking to improve ourselves and our community.
  in-times-conflict5: We keep our community respectful and open.
  in-times-conflict6: We make everyone feel heard.
  in-times-conflict7: We are mindful and kind in our interactions.
  in-the-future-title: 'In the future:'
  in-the-future1: The future is now.
  notes-title: Notes
  notes1: 'Please also visit our '
  notes2: p5.js Code of Conduct
  notes3: '. The p5.js Community Statement is licensed under a '
  notes4: Creative Commons license
  notes5: . Please feel free to share and remix with attribution.
  contribute-title: Contribute
  contribute1: >-
    Our community is always looking for enthusiasts to help in all different
    ways.
  develop-title: Develop.
  develop1: GitHub
  develop2: ' is the main place where code is collected, issues are documented, and discussions about code are had. Check out the '
  develop3: ' development tutorial'
  develop4: ' to get started, or '
  develop5: create your own library.
  document-title: Document.
  document1: ' Everyone loves documentation. Help is needed '
  document2: porting examples
  document3: ', and'
  document4: ' adding documentation'
  document5: ', and creating tutorials.'
  teach-title: Teach.
  teach1: ' Teach a workshop, a class, a friend, a collaborator! Tag @p5xjs on Twitter and we will do our best to share what you''re doing.'
  create-title: Create.
  create1: ' p5.js is looking for designers, artists, coders, programmers to bring your creative and amazing work to show on the front page and inspire other people. Submit your work to '
  create2: hello@p5js.org
  create3: .
  donate-title: Donate.
  donate1: ' p5.js is free and open source and made by artists. Help support the development of p5.js through a donation to the '
  donate2: Processing Foundation
  donate3: .
  contributors-conference-title: p5.js Contributors Conference
  contributors-conference1: >-
    While most work happens online, we also convene IRL. We've had two
    contributors conferences held at the
  contributors-conference2: >-
    at Carnegie Mellon University in Pittsburgh, PA. Artists, designers,
    developers, educators, and got together to advance the p5.js project.
  participants-title: Participants
  support-title: Support
  support1: Our contributor conference took place at the
  support2: >-
    at Carnegie Mellon University, an academic laboratory for atypical,
    anti-disciplinary, and inter-institutional research at the intersections of
    arts, science, technology, and culture.
  support3: This event was made possible by a grant from the
  support4: and generous support from the
  support5: and
  support6: Thank you!
  mailing-list-title: Mailing list
  mailing-list-1: >-
    Enter your email address to receive occasional updates from the Processing
    Foundation.
  2015contributors-conference-title: Contributors Conference 2015
  2015contributors-conference-date: May 25-31
  2015contributors-conference1: 'A group of approximately 30 participants gathered spent a week at the '
  2015contributors-conference2: >-
    , advancing the code, documentation, and community outreach tools of the
    p5.js programming environment. Participants came from as far away as Hong
    Kong, Seattle, Los Angeles, Boston and New York. Most were working
    professionals in the fields of creative technology, interaction design, and
    new-media arts, but the group also included a half-dozen undergraduate and
    graduate students from Carnegie Mellon’s Schools of Art and Architecture.
  2015contributors-conference3: Photos by Taeyoon Choi
  2015contributors-conference-diversity-title: Diversity
  2015contributors-conference-diversity1: >-
    Alongside technical development, one of the main focuses of this conference
    was outreach, community, and diversity. The conference began with a panel
  2015contributors-conference-diversity2: >-
    Diversity: Seven Voices on Race, Gender, Ability &amp; Class for FLOSS and
    the Internet
  2015contributors-conference-diversity3: '. '
  2015contributors-conference-diversity4: Organized by
  2015contributors-conference-diversity5: and
  2015contributors-conference-diversity6: ', '
  2015contributors-conference-diversity7: >-
    the panel took place Tuesday, 25 May 2015 in Kresge Auditorium at Carnegie
    Mellon University. Speakers included
  2015contributors-conference-diversity8: and
  2015contributors-conference-diversity9: .
  2015cc_1: Diverse group of participants smile and make a p5 sign with their hands
  2015cc_2: 'Participants jump, smile and throw their hands in the air on a green lawn'
  2015cc_3: Woman presenting the p5.js community statement from her laptop
  2015cc_4: >-
    Woman expressively speaks into a microphone while two male collaborators
    look on
  2015cc_5: Participants attentively smile and listen to a presentation
  2015cc_6: Woman reads about p5.js into a microphone to three female students
  2015cc_7: >-
    Participants sit in a circle around a white board with sticky notes on it
    while a female student speaks into a microphone
  2015cc_8: >-
    Participants sit around a table looking at each others laptops and compare
    code
  2015cc_9: Whiteboard with different colored sticky and written notes about programming
  2015cc_10: >-
    Woman speaking into a microphone about valuing different skill sets while a
    group of participants with laptops look at her powerpoint in a classroom
  2015cc_11: >-
    Woman speaks at a podium in an auditorium while three participants sit on
    the stage and another three are skyping in on the stage screen
  2015cc_12: Overhead view of a classroom with participants working on their laptops
  2015cc_13: Five people having a discussion in a circle
  2015cc_14: Five people in a circle with their laptops sharing their notes
  2015cc_15: Man in a classroom with a microphone speaking out to a group of participants
  2019contributors-conference-title: Contributors Conference 2019
  2019contributors-conference-date: August 13-18
  2019contributors-conference1: 'An interdisciplinary group of 35 participants gathered at the '
  2019contributors-conference2: >-
    , advancing the code, documentation, and community outreach tools and
    exploring the current landscape of the p5.js programming environment.
    Comprising a diverse range of participants within the fields of creative
    technology, interaction design, and new media arts, the conference was aimed
    at fostering dialogue through a multidisciplinary lens. Working groups
    focused on several topic areas: Access; Music and Code in Performance;
    Landscape of Creative Tech; and Internationalization.
  2019contributors-conference3: Videos by Qianqian Ye
  2019contributors-conference4: Photos by Jacquelyn Johnson
  outputs: Outputs
  output1: >-
    . An implementation of highly flexible triangle, square, hexagon, and
    octagon girds for p5.js. Created by Aren Davey.
  output2: >-
    . A set of template files for building a multi-device, multiplayer game
    where multiple clients can connect to a specified host page. Created by L05.
  output3: Experiments using
  output3-1: >-
    , testing early implementations of softCompile, OSC interfacing and added
    connectivity with demo for MIDI setup. A p5.js collaborative live-coding vj
    environment! Created by Ted Davis.
  output4: >-
    A panel on Blackness and Gender in Virtual Space led by American Artist,
    with shawné michaelain holloway and LaJuné McMillian.
  output5: Workshops led by Everest Pipkin and Jon Chambers.
  output6: 'A prototype of a '
  output6-1: notebook interface for p5.js.
  output6-2: Created by Allison Parrish.
  output7: >-
    New art installations by Stalgia Grigg, LaJuné McMillian, Aatish Bhatia, and
    Jon Chambers.
  output8: p5.js Global Contributor's Toolkit.
  output8-1: >-
    Created by Aarón Montoya-Moraga, Kenneth Lim, Guillermo Montecinos, Qianqian
    Ye,  Dorothy R. Santos, and Yasheng She.
  output9: How to write non-violent creative code.
  output9-1: ' A zine led by Olivia Ross.'
  output10: >-
    An overhaul of the p5.js website for accessibility. Including updates for
    screen reader accessibility, and improvements to the home, download, getting
    started, and reference pages. With contributions from Claire Kearney-Volpe,
    Sina Bahram, Kate Hollenbach, Olivia Ross, Luis Morales-Navarro, Lauren
    McCarthy, and Evelyn Masso.
  output11: >-
    Collaborative performances by Luisa Pereira, Jun Shern Chan, Shefali Nayak,
    Sona Lee, Ted Davis, and Carlos Garcia.
  output12: A performance by Natalie Braginsky.
  output13: >-
    A design of the p5.js library system for the p5 Editor. Created by Cassie
    Tarakajian and Luca Damasco.
  output14: >-
    Prototypes connecting p5 to other libraries. Created by Alex Yixuan Xu and
    Lauren Valley.
  output15: A closing campfire circle led by Golan Levin.
  2019cc_1: Man at a podium giving a presentation to the group
  2019cc_2: Participants sitting at a long table having lunch and a discussion
  2019cc_3: 'Participants in a classroom, some working on their laptops, others talking '
  2019cc_4: Classroom of participants working on their laptops
  2019cc_5: Participants in a meeting in a dark classroom
  2019cc_6: Woman giving presentation in a classroom of diverse participants
  2019cc_7: Participants conversing in a busy classroom
  2019cc_8: Woman with microphone speaking to fellow participants in a classroom
  2019cc_9: >-
    Participant speaks at a podium in front of projected text about the problem
    with anonymyzing data
  2019cc_10: >-
    Person with a microphone speaking to fellow participants in front of text
    that reads p5.js will not add any new features except those that increase
    access
  2019cc_11: 'Woman speaking into a microphone talking to fellow participants '
  2019cc_12: A man with a microphone speaking to fellow participants
  2019cc_13: Participants sit in a classroom towards the speakers listening intently
  2019cc_14: 'Classroom of participants facing a speaker listen intently '
  2019cc_15: >-
    Woman with microphone speaking to fellow participants with the text sacred
    boundaries in the projection behind her
  2019cc_16: >-
    Overhead view of participants listening to a panel of people with an image
    of a 3d rendered man on it
  2019cc_17: >-
    Participants sit around a table with their laptops and observe code on a
    screen
  2019cc_18: Woman sitting next to a lifesize teddy bear works on her laptop
  2019cc_19: Participants standing outside smiling
  2019cc_20: Four participants standing in a circle conversing
  2019cc_21: Participants sitting outside eating lunch together
  2019cc_22: >-
    Participants sitting around a large U shaped table looking towards the front
    of the classroom
  2019cc_23: >-
    Man sitting in front of the classroom speaking energetically into a
    microphone
  2019cc_24: >-
    Group photo of participants smiling enthusiastically with their hands in the
    air
  2019cc_25: Group of people sit around campfire made from four LCD monitors.
books:
  books-title: Books
  book-1-title: Getting Started with p5.js
  book-1-authors: 'Lauren McCarthy, Casey Reas, and Ben Fry. Illustrations by Taeyoon Choi.'
  book-1-publisher: 'Published October 2015, Maker Media. '
  book-1-pages: '246 pages. '
  book-1-type: Paperback.
  book-1-description: >-
    Written by the lead p5.js developer and the founders of Processing, this
    book provides an introduction to the creative possibilities of today's Web,
    using JavaScript and HTML.
  book-1-order-a: Order Print/Ebook from O'Reilly
  book-1-order-b: Order from Amazon
  book-2-title: Introduction to p5.js (Spanish Edition)
  book-2-authors: >-
    Lauren McCarthy, Casey Reas, and Ben Fry. Translated by Aarón
    Montoya-Moraga. Ilustraciones de Taeyoon Choi.
  book-2-publisher: 'Published 2018, Processing Foundation, Inc. '
  book-2-pages: '246 pages. '
  book-2-type: Soft cover.
  book-2-description: >-
    Written by the lead p5.js developer and the founders of Processing, this
    book provides an introduction to the creative possibilities of today's Web,
    using JavaScript and HTML.
  book-2-order-a: Order the PDF from The Processing Foundation Press
  book-2-order-b: Order the physical version from Amazon
  book-3-title: Generative Design
  book-3-authors: 'Benedikt Gross, Hartmut Bohnacker, Julia Laub and Claudius Lazzeroni.'
  book-3-publisher: 'Published October 30, 2018, Princeton Architectural Press; Reprint edition. '
  book-3-pages: '255 pages. '
  book-3-type: Paperback.
  book-3-description: >-
    By using simple languages such as JavaScript in p5.js, artists and makers
    can create everything from interactive typography and textiles to 3D-printed
    furniture to complex and elegant infographics.
  book-3-order-a: Order from Princeton Architectural Press
  book-3-order-b: Order from Amazon
  book-4-title: Generative Gestaltung (German Edition)
  book-4-authors: 'Benedikt Gross, Hartmut Bohnacker, Julia Laub and Claudius Lazzeroni.'
  book-4-publisher: 'Published March 1, 2018, Schmidt Hermann Verlag. '
  book-4-pages: '256 pages. '
  book-4-type: Hardcover.
  book-4-description: >-
    By using simple languages such as JavaScript in p5.js, artists and makers
    can create everything from interactive typography and textiles to 3D-printed
    furniture to complex and elegant infographics.
  book-4-order-a: Order from Verlag Hermann Schmidt
  book-4-order-b: Order from Amazon
  book-5-title: Learn JavaScript with p5.js
  book-5-authors: Engin Arslan.
  book-5-publisher: 'Published 2018, Apress. '
  book-5-pages: '217 pages. '
  book-5-type: Paperback.
  book-5-description: >-
    Learn coding from scratch in a highly engaging and visual manner using the
    vastly popular JavaScript with the programming library p5.js. The skills you
    will acquire from this book are highly transferable to a myriad of
    industries and can be used towards building web applications, programmable
    robots, or generative art.
  book-5-order-a: Order from Apress
  book-5-order-b: Order from Amazon
  book-6-title: "Aesthetic Programming: A Handbook of Software Studies"
  book-6-authors: 'Winnie Soon, Geoff Cox. '
  book-6-publisher: 'Published  2020, Open Humanities Press. '
  book-6-pages: '298 pages. '
  book-6-type: Hardcover.
  book-6-description: >-
    Using p5.js, this book introduces and demonstrates the reflexive practice
    of aesthetic programming, engaging with learning to program as a way to
    understand and question existing technological objects and paradigms,
    and to explore the  potential for reprogramming wider eco-socio-technical systems.
  book-6-order-a: Download the PDF (FREE)
  book-6-order-b: Order from Barnes & Noble
examples:
  Examples: Examples
  back-examples: Back to Examples
  Structure: Structure
  Form: Form
  Data: Data
  Arrays: Arrays
  Control: Control
  Image: Image
  Color: Color
  Math: Math
  Simulate: Simulate
  Interaction: Interaction
  Objects: Objects
  Lights: Lights
  Motion: Motion
  Instance_Mode: Instance Mode
  Dom: DOM
  Drawing: Drawing
  Transform: Transform
  Typography: Typography
  3D: 3D
  Input: Input
  Advanced_Data: Advanced Data
  Sound: Sound
  Mobile: Mobile
  Hello_P5: Hello p5
reference:
  Reference: Reference
showcase:
  showcase-title: Showcase
  showcase-intro1: 'Introducing Showcase, created by '
  showcase-intro2: ' in 2019 and currently curated by '
  showcase-intro3: >-
    We're celebrating how people are using p5.js to make creative work,
    learning, and open source more interesting and inclusive. Together, we make
    community. During Summer 2019, we asked a few creators to share more about
    how they've used p5.js through different projects and pieces.
  showcase-intro4: >-
    The Summer 2021 Showcase: The Love Ethic is now open for submissions, nominate someone's
    p5.js work or your own to be featured here! If Google is not available in your region, please email chankati@usc.edu to submit!
  nominate-project: Nominate a Project
  showcase-featuring: Featuring
  project-tag-art: Art
  project-tag-design: Design
  project-tag-code: Code
  project-tag-curriculum: Curriculum
  project-tag-documentation: Documentation
  project-tag-game: Game
  project-tag-library: Library
  project-tag-organizing: Organizing
  project-tag-tool: Tool
  project-tag-tutorial: Tutorial
  project-roni: Programmed Plotter Drawings
  credit-roni: Roni Cantor
  description-roni: >-
    Sine waves and lerps generated in p5.js, exported as SVG, and drawn with a
    plotter and pens.
  project-phuong: Airi Flies
  credit-phuong: Phuong Ngo
  description-phuong: >-
    In this game developed with p5.play, help Airi fly by saying PEW. Created to
    encourage people to get out of their comfort zone and feel more confident
    about themselves regardless of what they do and how they look or sound.
  project-daein: Chillin'
  credit-daein: Dae In Chung
  description-daein: >-
    An interactive typographic poster that uses a mobile device's motion sensor
    with p5.js.
  project-qianqian: Qtv
  credit-qianqian: Qianqian Ye
  description-qianqian: >-
    A video channel with 1-minute videos in Mandarin about creative coding, art,
    and technology, including p5.js tutorials for beginners. Available on
    YouTube, Instagram, Bilibili, and TikTok.
  project-casey-louise: p5.js Shaders
  credit-casey-louise: 'Casey Conchinha, Louise Lessél'
  description-casey-louise: 'A resource for learning the what, why, and how of using shaders in p5.js.'
  project-moon-xin: Moving Responsive Posters
  credit-moon-xin: 'Moon Jang, Xin Xin, and students'
  description-moon-xin: >-
    Browser-based moving posters that use graphical systems, transformation
    methods, and p5.js to address the connotations of a word less than 8
    letters. Designed by students for a graphic design course (Visual Narrative
    Systems) at the University of Georgia.
  created-by: Created By
  pronouns-female: (she/her)
  creator-from-roni-cantor: 'From Toronto, Canada'
  project-links: Project Links
  project-links-text-1-roni-cantor: Example sketch in p5.js Web Editor
  project-links-text-2-roni-cantor: AxiDraw V3 demo video
  project-q-1-1: What are you up to?
  project-q-1-2: How did you get started with p5.js?
  project-a-1-1-roni-cantor: >-
    I just graduated from Ryerson University's New Media program. Coming from 4
    years of coding and making robots, I decided to take a break and play with
    some more traditional forms of art—while still coding and playing with
    robots.
  project-a-1-2-roni-cantor: 'I first started using p5.js at '
  project-a-1-3-roni-cantor: '! After using '
  project-a-1-4-roni-cantor: ' for many years, I wanted to try something new.'
  project-q-2: How did you use p5.js in this project?
  project-a-2-1-roni-cantor: >-
    I used p5.js in this project to generate the sine wave and lerp (linear
    interpolation) formulas and display the visuals in the
  project-a-2-2-roni-cantor: >-
    . I then used a feature in my code that exported my programmed graphic into
    an
  project-a-2-3-roni-cantor: ' file. I needed an SVG file to give to the plotter—an '
  project-a-2-4-roni-cantor: >-
    —so that it understood where to draw the lines that I programmed. I sent
    this information to the plotter with a program called
  project-a-2-5-roni-cantor: '!'
  project-q-3: What's your favorite p5.js feature?
  project-a-3-roni-cantor: ' because lines are fun and "lerp" is a fun word to say!'
  project-q-4: >-
    Did you face any challenges working on this project? If so, how did you
    overcome them?
  project-a-4-roni-cantor: >-
    It was my first time using p5.js, Inkscape, and a plotter! I really
    benefited from the people around me who had used p5 before, as well as
    online guides and forums.
  project-q-5: What's a cool thing we should check out?
  project-a-5-roni-cantor: ' on Instagram—super cool analog plotter stuff.'
  project-q-6: Where can people learn more about you?
  project-a-6-roni-cantor: ' (Instagram)'
  project-resources: Project Resources
  creator-from-qianqian: 'Los Angeles, California'
  interview-link-qianqian: Processing Foundation interview with Qianqian Ye
  project-a-1-1-qianqian: I am a Chinese artist and designer based in Los Angeles.
  project-a-1-2-qianqian: >-
    My partner introduced me to p5.js, which I learned mainly by watching free
    online video tutorials. My first p5.js project was drawing some shapes with
    different colors.
  project-a-2-1-qianqian: >-
    This project started with an idea of teaching my mom, who lives in China and
    doesn’t speak English, to code with p5.js. This project was difficult on
    multiple levels, and I wanted to start by identifying the main reasons why
    it’s more challenging for someone like my mother to learn to code—primarily
    due to the lack of free creative coding education resources. Most of the
    free resources to learn creative coding are unavailable in China. The p5.js
    tutorials on YouTube as well as the p5.js Twitter and Instagram accounts are
    inaccessible in China because of internet censorship.
  project-a-2-2-qianqian: 'I learned a lot from YouTube videos such as the '
  project-a-2-3-qianqian: >-
    , but the more I watched coding tutorials online, the more I realized how
    difficult it is to find other womxn and people of color teaching coding,
    especially in Mandarin. I wanted to help other Chinese womxn relate to
    creative coding.
  project-a-2-4-qianqian: >-
    I am working on opening up the video channels to other Chinese creatives who
    want to contribute to the educational resource together, like interviews and
    guest tutorials. If you are interested in teaching/talking about creative
    coding in Mandarin, HMU!
  project-a-3-1-qianqian: 'The '
  project-a-3-2-qianqian: ' is my favorite feature. It makes web-based creative coding seamless.'
  project-a-4-1-qianqian: >-
    Learning to code in a second language was difficult and the lack of
    community made this process even harder. I hope to speak from my experience
    as a beginner and someone who once felt like an outsider to the creative
    coding and video tutorial world.
  project-a-4-2-qianqian: >-
    I spend a lot of time researching the latest technology for my videos. In
    the end, I decided on using my phone to record and iMovie to edit. I hope to
    encourage others that it doesn’t take a lot of expensive gears to get
    started making instructional videos.
  project-a-4-3-qianqian: >-
    Another issue I came across was my own fear of putting myself online. I
    first had to get over my anxiety of making mistakes in the videos or
    receiving negative comments online. Often womxn and people of color are
    targets for online harassment. I’m hoping to help set an example for other
    womxn and people of color that it’s ok to put yourselves online and
    strengthen your communities by sharing your knowledge. Eventually, we will
    be able to stop online harassment by creating strong diverse communities.
  project-a-5-1-qianqian: 'I am very excited about '
  project-a-5-2-qianqian: ' in LA.'
  creator-from-phuong: 'From Kyiv, Ukraine'
  project-a-1-1-phuong: 'I''m a creative coder and designer, a '
  link-1-phuong: Play Airi Flies!
  link-2-phuong: Code for AiriFlies on GitHub
  link-3-phuong: More info in Phuong Ngo's portfolio
  project-a-1-2-phuong: ' diversity scholarship recipient, and just a curious creature.'
  project-a-1-3-phuong: >-
    I was taking a course at the School of Machines in Berlin this summer
    called! "
  project-a-1-4-phuong: '," mainly taught by '
  project-a-2-1-phuong: >-
    I used p5.js to work on the visual part of the game. The animation sprites
    for Airi and the ghosts were drawn on an iPad app called
  project-a-2-2-phuong: ' and then integrated into '
  project-a-2-3-phuong: ' code. I mainly used examples at p5.play as a reference.'
  project-a-2-4-phuong: 'For the endless scrolling background, I found a '
  p5-sketch-by-chjno-phuong: p5 sketch by chjno
  project-a-2-5-phuong: >-
    . I set a condition so whenever the word "pew" or a mouse click was
    detected, the scrolling speed would change to make an illusion of Airi
    flying up. When the user does not do anything, the scrolling speed is
    negative, which makes it look like Airi is falling down.
  project-a-2-6-phuong: 'For sound recognition, I used '
  project-a-2-7-phuong: ' (currently, there is a beta version not available in public yet, but it will be very soon!). I added around 120 samples of my classmates saying the word "pew" with different intonations and 80 samples of background noise to train it. Then I integrated the model into the game with '
  project-a-3-1-phuong: >-
    I really love how easily you can create, manipulate, and delete HTML blocks
    and classes with the
  project-a-3-2-phuong: ' via '
  project-a-3-3-phuong: ' etc. But my most favorite function is '
  project-a-3-4-phuong: ', since this is where you create magic.'
  project-a-4-1-phuong: >-
    There were a lot of challenges simply because p5.js was something new to me.
    I did not work much with JavaScript in general before. Reading documentation
    and searching for similar examples helped a lot.
  project-a-5-1-phuong: 'Check out '
  school-of-machines-phuong: School of Machines' courses
  project-a-5-2-phuong: >-
    ! They try hard to connect the most creative people in the world and they do
    it well so far. ❤️
  pronouns-male: (he/him)
  creator-from-chung: 'From Baltimore, Maryland'
  link-1-casey-louise: p5.js Shaders guide
  link-2-casey-louise: Glitch collection of p5.js shader examples
  link-1-chung: View Chillin'
  link-2-chung: Code for Chillin' on GitHub
  link-3-chung: More info in Dae In Chung's Portfolio
  project-a-1-1-chung: >-
    I am a graphic designer and a faculty member at Maryland Institute College
    of Art, where I mainly teach coding (with p5.js and Processing, of course)
    and motion graphics.
  project-a-1-2-chung: 'I have been using '
  project-a-1-3-chung: ' for some time, and when p5.js came along, I started using it without a second thought because it was easy to convert existing Processing code and share projects online.'
  project-a-2-1-chung: >-
    This summer, I gave myself a challenge of making typographic posters with
    coding, and this is one of the posters I made. I didn’t know until very
    recently that I could use motion sensor data with p5.js. I was also watching
  dan-shiffman-matterjs-tutorial: Dan Shiffman’s matter.js tutorial videos
  project-a-2-2-chung: ', so I thought why not combine the two and practice what I was learning?'
  project-a-3-1-chung: >-
    There are many things I love about p5.js such as the online community and
    beginner friendliness. What I really like right now is the
  project-a-3-2-chung: >-
    , with which I can not only work online for myself but also share URLs
    quickly in the present mode. For this project in particular, I had to do a
    lot of testing on my phone, and it was much easier and quicker than
    committing to GitHub.
  project-a-4-1-chung: 'I had some troubles with handling font, alpha channel and z-depth in '
  project-a-4-2-chung: ' mode. I am still not happy with all my decisions. But in general, it was helpful to search the forum and not to forget to break down problems into smaller ones and iterate little by little. Also, I had issues with rendering out video files directly out of p5.js. Screen recording was not an option because of intermittent frame rate drops (my laptop is pretty slow). After doing some research, I decided to learn some basics of '
  project-a-4-3-chung: ' and build a tool for myself.'
  project-a-5-1-chung: >-
    As mentioned above, if you want to render out frames and video files out of
    p5.js sketches, check out my
  project-a-5-2-chung: ' and let me know what you think.'
  creator-from-casey-louise: 'From New York, New York'
  project-a-1-1-casey-louise: >-
    Casey: I'm a student at NYU ITP who's interested in computer graphics and
    interactive spaces, physical and digital.
  project-a-1-2-casey-louise: >-
    Louise: I'm a student at NYU ITP who's interested in computer graphics and
    interactive spaces based on sensor technologies.
  project-a-1-3-casey-louise: >-
    Casey: I started learning p5.js in 2018 in my first semester at ITP, though
    I had been dabbling in
  project-a-1-4-casey-louise: ' since 2012. I was introduced to Processing by my friend Pedro while I was studying graphic design, and it blew my mind. The idea of making my own tools for creating graphics and interactive art piqued my interest, but once I actually tried it, I was hooked. The first project I can remember was an eye that followed you around the screen, and it was sad when you left it alone.'
  project-a-1-5-casey-louise: >-
    Louise: I initially learned p5.js to make a website I was creating more
    playful. I’m a C# programmer, so this was a good segway into JavaScript for
    me.
  project-a-2-1-casey-louise: >-
    Casey: I was putting off learning shaders for a long time, and I was also
    curious if I could use them in p5.js. Then I heard about a grant for open
    source, storytelling, and learning resource projects at ITP called
  project-a-2-2-casey-louise: >-
    . Since I wasn't finding much in the way of p5.js + shader documentation, I
    decided to figure out how they're implemented in p5.js and create a resource
    for others to learn. When I told Louise about the project, she was
    immediately excited about learning and teaching shaders in p5.js. She's been
    great about making sure the project is a learning resource and not just a
    collection of examples.
  project-a-3-1-casey-louise: 'Casey: Does '
  project-a-3-2-casey-louise: ' count as a feature? I also love having the ability to share my programs on the web so that people don''t have to install special software or come to NYC to see my work.'
  project-a-3-3-casey-louise: 'Louise: My favorite feature is '
  project-a-3-4-casey-louise: ' and '
  project-a-3-5-casey-louise: ' for transformation of the coordinate system to make generative visuals.'
  project-a-4-1-casey-louise: >-
    Casey: The beginning of the project (figuring out how things work) was us
    reaching out to amazing people, asking questions, and asking for permission
    to use their examples in our project.
  adam-ferris-repo-casey-louise: Adam Ferriss' GitHub repo
  project-a-4-2-casey-louise: ' really laid the groundwork for us in understanding how shaders work in p5.js and provided a framework of approachable examples for us to build on. For some specific p5.js-related issues we were having, we reached out to '
  project-a-4-3-casey-louise: ' and '
  project-a-4-4-casey-louise: ' (who worked on the '
  webgl-casey-louise: WebGL implementation in p5.js
  project-a-4-5-casey-louise: '), and they were super helpful.'
  project-a-4-6-casey-louise: >-
    Louise: The learning curve was pretty steep for getting shaders into p5.
    Luckily, there were some very well-documented examples on GitHub by Adam
    Ferriss. Our aim was to do so in a way that a complete beginner can
    understand how to implement it, so it was as much a technical challenge as
    it was a challenge in teaching code to strangers and beginners. Here we drew
    inspiration from the way the
  openframeworks-book-casey-louise: openFrameworks book
  project-a-4-7-casey-louise: ' is written. A fun "hey, it’s not hard and you can do it too" approach is what we believe in.'
  project-a-5-1-casey-louise: 'Check out the '
  project-a-5-2-casey-louise: ' to explore our peers'' amazing grant projects!'
  pronouns-nonbinary: (they/them)
  creator-from-moon: 'From Athens, Georgia'
  posters-by: Posters By
  project-a-1-1-moon: >-
    Moon: I'm a graphic designer, visual artist, and design educator. This
    summer, I taught a graphic design course in the University of Georgia
    Cortona program in Italy, introducing some basics of p5.js. This fall, I am
    planning to teach and to study digital platforms at UGA.
  project-a-1-2-moon: 'My former colleague, '
  project-a-1-3-moon: ', invited me to '
  project-a-1-4-moon: ' in '
  pcd-la-moon: LA in January 2019
  project-a-1-5-moon: >-
    . They helped me with the tools and logics of p5.js. It was an excellent
    teaching and learning experience.
  project-a-2-1-moon: 'We followed basic tutorials, '
  codetrain-moon: Daniel's videos on YouTube
  project-a-2-2-moon: ', and '
  p5-reference-moon: Reference on the p5.js website
  project-a-2-3-moon: .
  project-a-3-1-moon: 'My favorite function is related to '
  project-a-3-2-moon: ' and '
  project-a-3-3-moon: ': '
  project-a-3-4-moon: >-
    . I was able to use and to teach this tool to visualize various ideas about
    time in motion.
  project-a-4-1-moon: >-
    It was challenging for me, a beginner, to understand the overall structure
    of p5.js and how code works in general. I had to repeat the p5.js basics a
    couple of times, and then I drew a chart to memorize and to teach the way I
    understood the p5.js structure and code with strong constraints I set up. It
    was an excellent teaching and learning experience.
  project-a-5-1-moon: 'Check out the '
  project-a-5-2-moon: ' in Milan, Italy.'
teach:
  teach-title2: Teach
  teach-intro1: >-
    Every teaching has its own unique goals, messages, conditions, and
    environments.
  teach-intro2: >-
    By documenting and sharing p5 workshops, classes, and materials, we hope to
    better connect the p5.js learner and educator communities around the world.
  teach-intro3: Share or recommend
  teach-intro4: 'your own teaching experiences, too!'
  teach-heading: p5 Teaching Resources
  teach-search-filter: Search Filter
  teach-filter1: 'Diversity & Inclusion : '
  teach-filter1-label1: Gender
  teach-filter1-label2: Race & Ethnicity
  teach-filter1-label3: Language
  teach-filter1-label4: Neuro-Type
  teach-filter1-label5: Ability
  teach-filter1-label6: Class
  teach-filter1-label7: Religion
  teach-filter1-label8: (Sub-)Culture
  teach-filter1-label9: Political Opinion
  teach-filter1-label10: Age
  teach-filter1-label11: Skill Level
  teach-filter1-label12: Occupation
  teach-filter1-label13: '#noCodeSnobs'
  teach-filter1-label14: '#newKidLove'
  teach-filter1-label15: '#unassumeCore'
  teach-filter1-label16: '#BlackLivesMatter'
  teach-filter2: 'Venue : '
  teach-filter2-label1: Africa
  teach-filter2-label2: Asia
  teach-filter2-label3: Europe
  teach-filter2-label4: North America
  teach-filter2-label5: Oceania
  teach-filter2-label6: South America
  teach-filter2-label7: 'Virtual-Online '
  teach-filter3: 'Year : '
  teach-filter4: 'Level of Difficulty : '
  teach-filter4-label1: Elementary
  teach-filter4-label2: Intermediate
  teach-filter4-label3: Advanced
  teach-case-subtitle1: Venue & Date
  teach-case-subtitle2: Participants
  teach-case-subtitle3: Level of Difficulty
  teach-case-subtitle4: Goals
  teach-case-subtitle5: Method & Materials
  teach-case1-title: p5.js à l'Ubuntu Party!
  teach-case1-lead-name: Basile Pesin
  teach-case1-content1: '2020 Ubuntu Party '
  teach-case1-content1-1: 'Cité des Sciences et de l''Industrie, Paris, France'
  teach-case1-content2: 'Any age, including children and parents, young and older adults.'
  teach-case1-content3: Advanced
  teach-case1-content4: >-
    To introduce a new public to programming through fun and compelling
    examples.
  teach-case1-content5: >-
    Method: in-person workshop, 1 hour per session, with different participant
    each times. The students were using (Ubuntu) machines with the p5.js web
    editor. I was teaching using a video projector as well as a board.
  teach-case1-content5-1: >-
    Materials: The exercises I gave where accessible through p5.js web-editor
    links available in
  teach-case2-title: >-
    Making The Thing that Makes the Thing: Exploring Generative Art & Design
    with p5.js
  teach-case2-lead-name: Priti Pandurangan & Ajith Ranka
  teach-case2-image-alt: A group of participants collaborating to create some designs using the p5.js web editor on their laptops.
  teach-case2-content1: 'National Institute of Design, Bangalore'
  teach-case2-content1-1: '2020 February 8, 2:30-4:00 PM'
  teach-case2-content2: >-
    Our participants included art/design students & professionals, creative
    coding enthusiasts. We had close to 50 participants.
  teach-case2-content3: 'Priti: Intermediate & Ajith: Advanced'
  teach-case2-content4: >-
    To explore generative art &#x0026; design and recreate some classical works
    with p5.js.
  teach-case2-content5: 'Methods: In-person, collaborative, hands-on workshop.'
  teach-case2-content5-1: 'Materials: '
  teach-case2-content5-2: 'course page '
  teach-case2-content5-3: 'linking to sketches on the p5 editor, '
  teach-case2-content5-4: 'interactive reference guide '
  teach-case2-content5-5: to p5 basics
  teach-case3-title: CC Fest (Creative Coding Festival)
  teach-case3-lead-name: Saber
  teach-case3-speech: 'Love p5.js. It has meant so much to me, my students, and this community.'
  teach-case3-content1: ' New York, Los Angeles, San Francisco, Virtual-Online '
  teach-case3-content1-1: ' Twice a year in NYC for four years; once a year in LA for three years; once a year in SF for two years; now virtual'
  teach-case3-content2: >-
    Our participants included art/design students & professionals, creative
    coding enthusiasts. We had close to 50 participants.
  teach-case3-content3: Intermediate
  teach-case3-content4: >-
    To build a teacher and student community around p5 for middle and high
    school.
  teach-case3-content5: >-
    A half-day of workshop led by volunteer teachers. We saw lots of different
    methods and materials. Most used some sort of slides or documentation, some
    live coding using an editor, with work time for participant to remix.
  teach-case3-content5-1: CC Fest Lessons page
  teach-case3-content5-2: ' for teaching materials'
  teach-case3-content5-3: More photos
  teach-case4-title: Taller Introducción a la Programación Creativa con p5.js
  teach-case4-lead-name: Aarón Montoya-Moraga
  teach-case4-image-alt: A group of 20 people sitting on a large shared table with their laptops looking at a projected screen.
  teach-case4-speech: 'p5.js is my happy place '
  teach-case4-content1: ' PlusCode Media Arts Festival, Buenos Aires, Argentina & Virtual-Online '
  teach-case4-content1-1: ' 2018 November 14, 3 hours'
  teach-case4-content2: >-
    I had around 16 students in the workshop, and a team including 3 people from
    the PlusCode festival, and one person at the venue.
  teach-case4-content3: 'Elementary, Intermediate, Advanced'
  teach-case4-content4: >-
    Introduction to beginners and artists of graphic web programming and open
    source, using p5.js, in Spanish :)
  teach-case4-content5: 'I used the material on this '
  teach-case4-content5-1: GitHub repo
  teach-case4-content5-2: ', we used the p5.js web editor, we had a three hour long workshop'
  teach-case4-content5-3: '+CODE electronic art festival 2018, Argentina'
  teach-case4-content5-4: ', Medium'
  teach-case5-title: Introduction to Generative Drawing
  teach-case5-lead-name: Adam Herst
  teach-case5-speech: >-
    My greatest source of uncertainty in developing the workshop was whether it
    was trying to teach art to programmers or to teach programming to artists.
  teach-case5-content1: Inter/Access
  teach-case5-content1-1: ' (artist-run centre), Toronto, Ontario, Canada'
  teach-case5-content1-2: In-person with a self-paced workbook for remote work
  teach-case5-content1-3: ' 2020 February 12, 7PM-9PM'
  teach-case5-content2: 15 artists
  teach-case5-content3: Elementary
  teach-case5-content4: >-
    To introduce p5.js to artists with little or no programming experience and
    to suggest one way an analogue practice can migrate to a digital form.
  teach-case5-content5: >-
    A printed workbook with activities that used the p5.js web editor to show
    how translate an physical drawing into a digital drawing.
  teach-case5-content5-1: 'Processing Community Day 2019: Generative Drawing at Inter/Access'
  teach-case5-content5-2: Introduction to Generative Drawing Letter PDF
  teach-case5-content5-3: Introduction to Generative Drawing Booklet PDF
  teach-case6-title: 'Open Lecture, Creative Coding: 2020'
  teach-case6-lead-name: Shunsuke Takawo
  teach-case6-image-alt: A table on which there is a laptop, some sheets of papers, colorful pens and two automatic machines drawing something with a pen on a sheet.
  teach-case6-speech: >-
    I love p5.js because it's so easy to read and write code in p5.js. Coding in
    your everyday life!
  teach-case6-content1: ' Kyoto University of Art and Design, Kyoto, Japan & Virtual-Online '
  teach-case6-content1-1: ' 2020 March 16-18, 1-7 PM'
  teach-case6-content2: 'Students of Kyoto University of Art and Design, and anyone.'
  teach-case6-content3: Elementary
  teach-case6-content4: Making code as a tool for artistic expression.
  teach-case6-content5: 'Dropbox Paper, p5.js web editor.'
  teach-case6-content5-1: Syllabus
  teach-case6-content5-2: Day 1
  teach-case6-content5-3: Day 2
  teach-case6-content5-4: Day 3
  teach-case6-content5-5: ', YouTube'
  teach-case7-title: Creative Coding for Static Graphics
  teach-case7-lead-name: Shunsuke Takawo
  teach-case7-speech: >-
    Coding in p5.js is a lot of fun. If you haven't started yet, I encourage you
    to give it a try!
  teach-case7-content1: ' FabCafe MTRL, Tokyo, Japan'
  teach-case7-content1-1: ' 2019 September 15, 4-7 PM '
  teach-case7-content2: Anyone who wants to try coding in p5.js.
  teach-case7-content3: Intermediate
  teach-case7-content4: To code from the graphic design's perspective.
  teach-case7-content5: 'Dropbox Paper, p5.js web editor.'
  teach-case7-content5-1: Syllabus & Material
  teach-case8-title: Generative Typography
  teach-case8-lead-name: Dae In Chung
  teach-case8-image-alt: A image with black background displaying the letter 'b' in 5 different styles along with a menu with various styling options to choose.
  teach-case8-content1: ' Baltimore, Maryland, USA & Virtual-Online '
  teach-case8-content1-1: ' 2019 January 21 - May 08, every Wednesday, 4-10 PM'
  teach-case8-content2: 14 undergrads and grad students who had little to no experience in coding.
  teach-case8-content3: Elementary
  teach-case8-content4: Experiment with typographic forms and structures through computation.
  teach-case8-content5: 'Methods: online/offline lectures and critiques.'
  teach-case8-content5-1: 'Materials: p5js online editor, Github, youtube tutorials.'
  teach-case8-content5-2: Works of participants
  teach-case9-title: Machine Learning for the Web
  teach-case9-lead-name: Yining Shi
  teach-case9-image-alt: A group of 16 people sitting around tables with their laptops, mobile phones and some other accessories, facing towards a large television screen.
  teach-case9-content1: ' ITP, NYU, 370 Jay St, Brooklyn, NY 11201, USA'
  teach-case9-content1-1: '2019 March 09 - October 12, every Tuesday, 6:30-9:00 PM'
  teach-case9-content2: >-
    Students at Interactive Telecommunications Program, New York University. 16
    people.
  teach-case9-content3: 'Elementary, Intermediate'
  teach-case9-content4: >-
    The goal of this class is to learn and understand common machine learning
    techniques and apply them to generate creative outputs in the browser using
    ml5.js and p5.js.
  teach-case9-content5: >-
    This class is a mix of lectures, coding sessions, group discussions, and
    presentations. I used
  teach-case9-content5-1: GitHub
  teach-case9-content5-2: ' to host class syllabus and all the coding materials, Google Slides for lectures and p5.js Web Editor for live coding sessions. Every week, there were one-on-one office hours to talk about any difficulties of coming up with an idea for the homework or any coding changes.'
  teach-case9-content5-3: 'Methods: online/offline lectures and critiques.'
  teach-case10-title: Introduction to p5.js and JavaScript
  teach-case10-lead-name: Nico Reski
  teach-case10-content1: ' Currently available as self-study at own pace with accompanying slides, linked below.'
  teach-case10-content3: 'Beginner, Elementary'
  teach-case10-content4: >-
    Introduce learners (potentially with no coding experiences at all) to the
    very basics of p5.js (and JavaScript), in order to encourage creative coding
    and enable them to pursue own projects in a safe environment.
  teach-case10-content5: >-
    p5.js source code (for the introductory project), JavaScript source code
    (illustrating some basic JavaScript functionalities), accompanying slides in
    .pdf format, all hosted publicly on GitHub.
  teach-case10-content5-1: Overview
  teach-case10-content5-2: ' of the workshop and its contents (including all links to the material hosted on GitHub) on my academic webpage.'
  teach-case11-title: Digital Weaving & Physical Computing Workshop Series
  teach-case11-lead-name: Qianqian Ye & Evelyn Masso
  teach-case11-image-alt: This image is divided in two parts. The left part shows a group of 15 women sitting on chairs with their laptops and looking at a presentor who is explaining a code on a projected screen. The right part of the image shows a person learning weaving using a physical pattern and a weaving tool.
  teach-case11-content1: ' Womens Center for Creative Work (WCCW), Los Angeles, CA, US'
  teach-case11-content1-1: ' 2019 October 19 - November 02, every Saturday 3-6 PM'
  teach-case11-content2: '15 women and non-binary artists, designer, makers, programers. '
  teach-case11-content3: Elementary
  teach-case11-content4: >-
    Over the course of three workshops, we will draw and create patterns using
    p5.js, an open-source graphical library; we will learn and apply
    computational concepts to transform patterns and finally, we will bring a
    weaving to life with electronic microcontrollers.
  teach-case11-content5: 'Methods: small team session'
  teach-case11-content5-1: >-
    Materials: slides, p5.js web editor, pen and paper to draw pattern, physical
    pattern weaving tool.
  teach-case11-content5-2: 'Workshop Slide #1'
  teach-case11-content5-3: 'Workshop Slide #2'
  teach-case11-content5-4: Workshop Information
  teach-case11-content5-5: ' on WCCW website.'
  teach-case12-title: Signing Coders
  teach-case12-lead-name: Taeyoon Choi
  teach-case12-image-alt: Two volunteers explaining concepts using a white board and a screen to a bunch of deaf and hard of hearing students, each student facing a computer screen.
  teach-case12-speech: >-
    I'm working on a new series of coding class for Disabled students in South
    Korea. I'm researching about the pedagogy and translation. I plan to hold
    workshops in December 2020. The project is supported by the Open Society
    Foundation Human Rights Initiative and Korea Disability Arts & Culture
    Center.
  teach-case12-content1: ' WRIC, New York City, USA & Seoul Museum of Art, Seoul, South Korea.'
  teach-case12-content1-1: '5 Sessions, each 2~3 hours'
  teach-case12-content2: Deaf and Hard of Hearing students age 10~50 who live in NYC.
  teach-case12-content3: Elementary
  teach-case12-content4: >-
    To help Deaf and Hard of Hearing students learn about computer programming
    through playful exercises. To make ASL tutorial of basic coding concepts.
  teach-case12-content5: >-
    We used p5.js Web editor and code examples on the website. We also used
    dice, playing cards and various paper tools to help students learn about
    coding concepts.
  teach-case12-content5-1: Syllabus & Material
  teach-case12-content5-2: More photos
